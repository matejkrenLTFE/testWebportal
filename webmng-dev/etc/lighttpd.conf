server.modules = (
	"mod_access",
	"mod_alias",
	"mod_compress",
 	"mod_redirect",
#       "mod_rewrite",
	"mod_setenv",
	"mod_proxy",
	"mod_auth"
)

server.document-root        = "/var/www/html"
server.upload-dirs          = ( "/var/cache/lighttpd/uploads" )
server.errorlog             = "/var/log/lighttpd/error.log"
server.pid-file             = "/var/run/lighttpd.pid"
server.username             = "www-data"
server.groupname            = "www-data"
server.port                 = 80


index-file.names            = ( "index.php", "index.html", "index.lighttpd.html" )
url.access-deny             = ( "~", ".inc" )
static-file.exclude-extensions = ( ".php", ".pl", ".fcgi" )

compress.cache-dir          = "/var/cache/lighttpd/compress/"
compress.filetype           = ( "application/javascript", "text/css", "text/html", "text/plain" )

# default listening port for IPv6 falls back to the IPv4 port
## Use ipv6 if available
#include_shell "/usr/share/lighttpd/use-ipv6.pl " + server.port
include_shell "/usr/share/lighttpd/create-mime.assign.pl"
include_shell "/usr/share/lighttpd/include-conf-enabled.pl"

mimetype.assign += ( ".wsdl" => "text/xml" )

setenv.add-response-header += ( "Access-Control-Allow-Origin" => "*" )
setenv.add-response-header += ( "Access-Control-Allow-Headers" => "*" )
setenv.add-response-header += ( "Access-Control-Allow-Methods" => "GET,POST" )

# gSOAP proxy
proxy.server = (
	"/soap/" => (( "host" => "10.2.7.78", "port" => 8080 ))
)

# HTTPS
$SERVER["socket"]==":443" {
	ssl.engine="enable"
	ssl.pemfile="/etc/lighttpd/cert/lighttpd.pem"
}

# Force HTTPS
$HTTP["scheme"] == "http" {
    # capture vhost name with regex conditiona -> %0 in redirect pattern
    # must be the most inner block to the redirect rule
    $HTTP["host"] =~ ".*" {
        url.redirect = (".*" => "https://%0$0")
    }
}

# AUTH
auth.debug = 2
auth.backend = "plain"
auth.backend.plain.userfile = "/var/www/.lighttpd-authbasic-users"

$HTTP["url"] =~ "^/app" {
auth.require=( "" => (
	"method" => "basic",
	"realm" => "SOAP_Client_AUTH",
	# "require"=>"valid-user",
	"require"=>"user=username|user=admin"
))
}

compress.allowed-encodings = ("bzip2", "gzip", "deflate")
